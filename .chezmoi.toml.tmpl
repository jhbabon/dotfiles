{{- $codespaces:= env "CODESPACES" | not | not -}}
sourceDir = {{ .chezmoi.sourceDir | quote }}

[data]
  codespaces = {{ $codespaces }}

# Manage Neovim plugins usign chezmoi
#
# We can use chezmoi to install all Neovim packages.
# Chezmoi will ensure that the repositories are cloned and up
# to date for us.
#
# Here we define the packages we want to install under the
# `data.nvim.packages` table.
#
# To add a new package add a new entry with the package's name.
# The name will be used as the directory under `*/nvim/site/pack/chezmoi/{opt/start}`.
# If the name has a dot use quotes to ensure it's not split into attributes.
#
# Each package entry has the following attributes:
# - github: the GitHub path. Example: someone/plug.nvim
# - type: opt or start package type. Defaults to "start"
# - branch: the branch to clone. Optional
#
# These package definitions are used inside the `.chezmoiexternal` file
#
# Example: plenary.nvim
# [data.nvim.packages."plenary.nvim"]
#   type = "opt"
#   github = "nvim-lua/plenary.nvim"
[data.nvim.packages]

# Main dependencies
[data.nvim.packages."plenary.nvim"]
  github = "nvim-lua/plenary.nvim"
[data.nvim.packages."nvim-web-devicons"]
  github = "kyazdani42/nvim-web-devicons"

# Treesitter
[data.nvim.packages."nvim-treesitter"]
  github = "nvim-treesitter/nvim-treesitter"
[data.nvim.packages."iswap.nvim"]
  github = "mizlan/iswap.nvim"

# Theme
[data.nvim.packages."lualine.nvim"]
  github = "nvim-lualine/lualine.nvim"
[data.nvim.packages."rose-pine"]
  github = "rose-pine/neovim"
[data.nvim.packages."kanagawa.nvim"]
  github = "rebelot/kanagawa.nvim"

# File explorer
[data.nvim.packages."dirbuf.nvim"]
  github = "elihunter173/dirbuf.nvim"

# Filetypes
[data.nvim.packages."vim-just"]
  github = "NoahTheDuke/vim-just"

# Project management
[data.nvim.packages."vim-projectionist"]
  type = "opt"
  github = "tpope/vim-projectionist"

# Mix tools
[data.nvim.packages."vim-eunuch"]
  github = "tpope/vim-eunuch"
[data.nvim.packages."vim-characterize"]
  github = "tpope/vim-characterize"
[data.nvim.packages."vim-abolish"]
  github = "tpope/vim-abolish"
[data.nvim.packages."vim-matchup"]
  github = "andymass/vim-matchup"

# Diagnostics
[data.nvim.packages."trouble.nvim"]
  github = "folke/trouble.nvim"

# Quick movement
[data.nvim.packages."flash.nvim"]
  github = "folke/flash.nvim"

# Git
[data.nvim.packages."vim-fugitive"]
  github = "tpope/vim-fugitive"
[data.nvim.packages."diffview.nvim"]
  github = "sindrets/diffview.nvim"

# Search
[data.nvim.packages."any-jump.vim"]
  type = "opt"
  github = "pechorin/any-jump.vim"
[data.nvim.packages."vim-grepper"]
  type = "opt"
  github = "mhinz/vim-grepper"
[data.nvim.packages."nvim-spectre"]
  type = "opt"
  github = "nvim-pack/nvim-spectre"

# Fuzzy picker
[data.nvim.packages."telescope.nvim"]
  github = "nvim-telescope/telescope.nvim"
  branch = "0.1.x"

# Mixed tools from mini.nvim
[data.nvim.packages."mini.nvim"]
  github = "echasnovski/mini.nvim"

# LSP
[data.nvim.packages."mason.nvim"]
  github = "williamboman/mason.nvim"
[data.nvim.packages."nvim-lspconfig"]
  github = "neovim/nvim-lspconfig"
[data.nvim.packages."fidget.nvim"]
  github = "j-hui/fidget.nvim"
  branch = "legacy"

# Snippets
[data.nvim.packages."nvim-snippy"]
  github = "dcampos/nvim-snippy"
[data.nvim.packages."vim-snippets"]
  github = "honza/vim-snippets"

# Terminal
[data.nvim.packages."toggleterm.nvim"]
  github = "akinsho/toggleterm.nvim"

# Copy text from remote hots
[data.nvim.packages."nvim-osc52"]
  github = "ojroques/nvim-osc52"

# After removing a package, add its name to the `data.nvim.graveyard`
# table so it can be removed by chezmoi using the .chezmoiremove file
#
# Example:
# [data.nvim.graveyard."plug.nvim"]
#   type = "opt" # defaults to "start" if missing
[data.nvim.graveyard]

# vim:set ft=toml:
