{{- $codespaces:= env "CODESPACES" | not | not -}}
sourceDir = {{ .chezmoi.sourceDir | quote }}

[data]
  codespaces = {{ $codespaces }}

# Manage Neovim plugins using chezmoi
#
# We can use chezmoi to install all Neovim packages.
# Chezmoi will ensure that the repositories are cloned and up
# to date for us.
#
# Here we define the packages we want to install under the
# `data.nvim.packages` table.
#
# To add a new package, add a new entry with the package's name.
# The name will be used as the directory under `*/nvim/site/pack/chezmoi/{opt/start}`. If the name has a dot, use quotes to ensure it's not
# split into attributes.
#
# Each package entry has the following attributes:
# - github: the GitHub path. Example: someone/plug.nvim
# - type: opt or start package type. Defaults to opt
#
# These package definitions are used inside the `.chezmoiexternal` file
#
# Example: plenary.nvim
# [data.nvim.packages."plenary.nvim"]
#   type = "start"
#   github = "nvim-lua/plenary.nvim"
[data.nvim.packages]
[data.nvim.packages."plenary.nvim"]
  type = "start"
  github = "nvim-lua/plenary.nvim"
[data.nvim.packages."nvim-treesitter"]
  type = "start"
  github = "nvim-treesitter/nvim-treesitter"

# After removing a package, add its name to the `data.nvim.graveyard`
# table so it can be removed by chezmoi using the .chezmoiremove file
#
# Example:
# [data.nvim.graveyard."plug.nvim"]
#   type = "start" # defaults to "opt" if missing
[data.nvim.graveyard]

# vim:set ft=toml:
