# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: alacritty-direct

window:
  dynamic_title: true

  # Background opacity
  #
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  opacity: 1.0

  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 0
    y: 0

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  # Window title
  #title: Alacritty

  # Window class (Linux only):
  #class: Alacritty

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font configuration (changes require restart)
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux) monospace
    #   - (Windows) Consolas
    family: JetBrainsMono Nerd Font # Cascadia Code

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    family: JetBrainsMono Nerd Font # Cascadia Code

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    family: JetBrainsMono Nerd Font # Cascadia Code

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Point size
  size: 14.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
# draw_bold_text_with_bright_colors: true

schemes:
  onedark: &onedark
    primary:
      background: '0x282c34'
      foreground: '0xabb2bf'

    normal:
      # NOTE: Use '0x131613' for the `black` color if you'd like to see
      # black text on the background.
      black:   '0x282c34'
      red:     '0xe06c75'
      green:   '0x98c379'
      yellow:  '0xd19a66'
      blue:    '0x61afef'
      magenta: '0xc678dd'
      cyan:    '0x56b6c2'
      white:   '0xabb2bf'

    bright:
      black:   '0x5c6370'
      red:     '0xe06c75'
      green:   '0x98c379'
      yellow:  '0xd19a66'
      blue:    '0x61afef'
      magenta: '0xc678dd'
      cyan:    '0x56b6c2'
      white:   '0xffffff'

  dracula: &dracula
    primary:
      background: '#282a36'
      foreground: '#f8f8f2'

    normal:
      black:   '#000000'
      red:     '#ff5555'
      green:   '#50fa7b'
      yellow:  '#f1fa8c'
      blue:    '#caa9fa'
      magenta: '#ff79c6'
      cyan:    '#8be9fd'
      white:   '#bfbfbf'

    bright:
      black:   '#575b70'
      red:     '#ff6e67'
      green:   '#5af78e'
      yellow:  '#f4f99d'
      blue:    '#caa9fa'
      magenta: '#ff92d0'
      cyan:    '#9aedfe'
      white:   '#e6e6e6'

  material: &material
    primary:
      background: '#1e282d'
      foreground: '#c4c7d1'

    normal:
      black:   '#666666'
      red:     '#eb606b'
      green:   '#c3e88d'
      yellow:  '#f7eb95'
      blue:    '#80cbc4'
      magenta: '#ff2f90'
      cyan:    '#aeddff'
      white:   '#ffffff'

    bright:
      black:   '#ff262b'
      red:     '#eb606b'
      green:   '#c3e88d'
      yellow:  '#f7eb95'
      blue:    '#7dc6bf'
      magenta: '#6c71c4'
      cyan:    '#35434d'
      white:   '#ffffff'

  ayu_dark: &ayu_dark
    primary:
      background: '0x0A0E14'
      foreground: '0xB3B1AD'

    normal:
      black:   '0x01060E'
      red:     '0xEA6C73'
      green:   '0x91B362'
      yellow:  '0xF9AF4F'
      blue:    '0x53BDFA'
      magenta: '0xFAE994'
      cyan:    '0x90E1C6'
      white:   '0xC7C7C7'

    bright:
      black:   '0x686868'
      red:     '0xF07178'
      green:   '0xC2D94C'
      yellow:  '0xFFB454'
      blue:    '0x59C2FF'
      magenta: '0xFFEE99'
      cyan:    '0x95E6CB'
      white:   '0xFFFFFF'

  ayu_light: &ayu_light
    primary:
      background: '0xfafafa'
      foreground: '0x5b6672'

    normal:
      black: '0x000000' #0
      red: '0xf2590b' #1
      green: '0x76cc00' #2
      yellow: '0xf29717' #3
      blue: '0x41a5d9' #4
      magenta: '0x9965cc' #5
      cyan: '0x4dbf98' #6
      white: '0xc7c7c7' #7

    bright:
      black: '0x676767'
      red: '0xd6646a' #9
      green: '0xa3d900' #10
      yellow: '0xe7c446' #11
      blue: '0x6871ff' #12
      magenta: '0xa37acc' #13
      cyan: '0x56d9ad' #14
      white: '0xfeffff' #15

  onehalf_light: &onehalf_light
    primary:
      background: '0xfafafa'
      foreground: '0x383a42'

    normal:
      black: '0x383a42'
      red: '0xe45649'
      green: '0x50a14f'
      yellow: '0xc18401'
      blue: '0x0184bc'
      magenta: '0xa626a4'
      cyan: '0x0997b3'
      white: '0xfafafa'

    bright:
      black: '0x383a42'
      red: '0xe45649'
      green: '0x50a14f'
      yellow: '0xc18401'
      blue: '0x0184bc'
      magenta: '0xa626a4'
      cyan: '0x0997b3'
      white: '0xfafafa'

    onehalf_dark: &onehalf_dark
      primary:
        background: '0x282c34'
        foreground: '0xdcdfe4'

      normal:
        black: '0x282c34'
        red: '0xe06c75'
        green: '0x98c379'
        yellow: '0xe5c07b'
        blue: '0x61afef'
        magenta: '0xc678dd'
        cyan: '0x56b6c2'
        white: '0xdcdfe4'

      bright:
        black: '0x282c34'
        red: '0xe06c75'
        green: '0x98c379'
        yellow: '0xe5c07b'
        blue: '0x61afef'
        magenta: '0xc678dd'
        cyan: '0x56b6c2'
        white: '0xdcdfe4'

  rose_pine: &rose_pine
    primary:
      background: "0x191724"
      foreground: "0xe0def4"
    cursor:
      text: "0xe0def4"
      cursor: "0x524f67"
    vi_mode_cursor:
      text: "0xe0def4"
      cursor: "0x524f67"
    line_indicator:
      foreground: None
      background: None
    selection:
      text: "0xe0def4"
      background: "0x403d52"
    normal:
      black: "0x26233a"
      red: "0xeb6f92"
      green: "0x31748f"
      yellow: "0xf6c177"
      blue: "0x9ccfd8"
      magenta: "0xc4a7e7"
      cyan: "0xebbcba"
      white: "0xe0def4"
    bright:
      black: "0x6e6a86"
      red: "0xeb6f92"
      green: "0x31748f"
      yellow: "0xf6c177"
      blue: "0x9ccfd8"
      magenta: "0xc4a7e7"
      cyan: "0xebbcba"
      white: "0xe0def4"
    hints:
      start:
        foreground: "#908caa"
        background: "#1f1d2e"
      end:
        foreground: "#6e6a86"
        background: "#1f1d2e"

  rose_pine_moon: &rose_pine_moon
    primary:
      background: "0x232136"
      foreground: "0xe0def4"
    cursor:
      text: "0xe0def4"
      cursor: "0x56526e"
    vi_mode_cursor:
      text: "0xe0def4"
      cursor: "0x56526e"
    line_indicator:
      foreground: None
      background: None
    selection:
      text: "0xe0def4"
      background: "0x44415a"
    normal:
      black: "0x393552"
      red: "0xeb6f92"
      green: "0x3e8fb0"
      yellow: "0xf6c177"
      blue: "0x9ccfd8"
      magenta: "0xc4a7e7"
      cyan: "0xea9a97"
      white: "0xe0def4"
    bright:
      black: "0x6e6a86"
      red: "0xeb6f92"
      green: "0x3e8fb0"
      yellow: "0xf6c177"
      blue: "0x9ccfd8"
      magenta: "0xc4a7e7"
      cyan: "0xea9a97"
      white: "0xe0def4"
    hints:
      start:
        foreground: "#908caa"
        background: "#2a273f"
      end:
        foreground: "#6e6a86"
        background: "#2a273f"

  rose_pine_dawn: &rose_pine_dawn
    primary:
      background: "0xfaf4ed"
      foreground: "0x575279"
    cursor:
      text: "0x575279"
      cursor: "0xcecacd"
    vi_mode_cursor:
      text: "0x575279"
      cursor: "0xcecacd"
    line_indicator:
      foreground: None
      background: None
    selection:
      text: "0x575279"
      background: "0xdfdad9"
    normal:
      black: "0xf2e9e1"
      red: "0xb4637a"
      green: "0x286983"
      yellow: "0xea9d34"
      blue: "0x56949f"
      magenta: "0x907aa9"
      cyan: "0xd7827e"
      white: "0x575279"
    bright:
      black: "0x9893a5"
      red: "0xb4637a"
      green: "0x286983"
      yellow: "0xea9d34"
      blue: "0x56949f"
      magenta: "0x907aa9"
      cyan: "0xd7827e"
      white: "0x575279"
    hints:
      start:
        foreground: "#797593"
        background: "#fffaf3"
      end:
        foreground: "#9893a5"
        background: "#fffaf3"

  # Catppuccin!
  catppuccin: &catppuccin
    # Default colors
    primary:
      background: '0x1E1D2F'
      foreground: '0xD9E0EE'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: '0x1E1D2F'
      cursor: '0xF5E0DC'

    # Normal colors
    normal:
      black:   '0x6E6C7E'
      red:     '0xF28FAD'
      green:   '0xABE9B3'
      yellow:  '0xFAE3B0'
      blue:    '0x96CDFB'
      magenta: '0xF5C2E7'
      cyan:    '0x89DCEB'
      white:   '0xD9E0EE'

    # Bright colors
    bright:
      black:   '0x988BA2'
      red:     '0xF28FAD'
      green:   '0xABE9B3'
      yellow:  '0xFAE3B0'
      blue:    '0x96CDFB'
      magenta: '0xF5C2E7'
      cyan:    '0x89DCEB'
      white:   '0xD9E0EE'

    indexed_colors:
      - { index: 16, color: '0xF8BD96' }
      - { index: 17, color: '0xF5E0DC' }

  # Kanagawa: https://github.com/rebelot/kanagawa.nvim/blob/master/extras/alacritty_kanagawa.yml
  kanagawa: &kanagawa
    primary:
      background: '0x1f1f28'
      foreground: '0xdcd7ba'

    normal:
      black:   '0x090618'
      red:     '0xc34043'
      green:   '0x76946a'
      yellow:  '0xc0a36e'
      blue:    '0x7e9cd8'
      magenta: '0x957fb8'
      cyan:    '0x6a9589'
      white:   '0xc8c093'

    bright:
      black:   '0x727169'
      red:     '0xe82424'
      green:   '0x98bb6c'
      yellow:  '0xe6c384'
      blue:    '0x7fb4ca'
      magenta: '0x938aa9'
      cyan:    '0x7aa89f'
      white:   '0xdcd7ba'

    selection:
      background: '0x2d4f67'
      foreground: '0xc8c093'

    indexed_colors:
      - { index: 16, color: '0xffa066' }
      - { index: 17, color: '0xff5d62' }

colors: *rose_pine_dawn

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

  hints:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory: None

# Windows 10 ConPTY backend (Windows only)
#
# This will enable better color support and may resolve other issues,
# however this API and its implementation is still young and so is
# disabled by default, as stability may not be as good as the winpty
# backend.
#
# Alacritty will fall back to the WinPTY automatically if the ConPTY
# backend cannot be initialized.
enable_experimental_conpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: false

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  # (Windows/Linux only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

  - { key: Paste,                   action: Paste                            }
  - { key: Copy,                    action: Copy                             }
  - { key: L,        mods: Control, action: ClearLogNotice                   }
  - { key: L,        mods: Control, chars: "\x0c"                            }
  - { key: Home,     mods: Alt,     chars: "\x1b[1;3H"                       }
  - { key: Home,                    chars: "\x1bOH",        mode: AppCursor  }
  - { key: Home,                    chars: "\x1b[H",        mode: ~AppCursor }
  - { key: End,      mods: Alt,     chars: "\x1b[1;3F"                       }
  - { key: End,                     chars: "\x1bOF",        mode: AppCursor  }
  - { key: End,                     chars: "\x1b[F",        mode: ~AppCursor }
  - { key: PageUp,   mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~",     mode: Alt        }
  - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                       }
  - { key: PageUp,   mods: Alt,     chars: "\x1b[5;3~"                       }
  - { key: PageUp,                  chars: "\x1b[5~"                         }
  - { key: PageDown, mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~",     mode: Alt        }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                       }
  - { key: PageDown, mods: Alt,     chars: "\x1b[6;3~"                       }
  - { key: PageDown,                chars: "\x1b[6~"                         }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                          }
  - { key: Back,                    chars: "\x7f"                            }
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                        }
  - { key: Insert,                  chars: "\x1b[2~"                         }
  - { key: Delete,                  chars: "\x1b[3~"                         }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                       }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                       }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                       }
  - { key: Left,                    chars: "\x1b[D",        mode: ~AppCursor }
  - { key: Left,                    chars: "\x1bOD",        mode: AppCursor  }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                       }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                       }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                       }
  - { key: Right,                   chars: "\x1b[C",        mode: ~AppCursor }
  - { key: Right,                   chars: "\x1bOC",        mode: AppCursor  }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                       }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                       }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                       }
  - { key: Up,                      chars: "\x1b[A",        mode: ~AppCursor }
  - { key: Up,                      chars: "\x1bOA",        mode: AppCursor  }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                       }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                       }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                       }
  - { key: Down,                    chars: "\x1b[B",        mode: ~AppCursor }
  - { key: Down,                    chars: "\x1bOB",        mode: AppCursor  }
  - { key: F1,                      chars: "\x1bOP"                          }
  - { key: F2,                      chars: "\x1bOQ"                          }
  - { key: F3,                      chars: "\x1bOR"                          }
  - { key: F4,                      chars: "\x1bOS"                          }
  - { key: F5,                      chars: "\x1b[15~"                        }
  - { key: F6,                      chars: "\x1b[17~"                        }
  - { key: F7,                      chars: "\x1b[18~"                        }
  - { key: F8,                      chars: "\x1b[19~"                        }
  - { key: F9,                      chars: "\x1b[20~"                        }
  - { key: F10,                     chars: "\x1b[21~"                        }
  - { key: F11,                     chars: "\x1b[23~"                        }
  - { key: F12,                     chars: "\x1b[24~"                        }
  - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                       }
  - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                       }
  - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                       }
  - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                       }
  - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                      }
  - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                      }
  - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                      }
  - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                      }
  - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                      }
  - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                      }
  - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                      }
  - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                      }
  - { key: F1,       mods: Control, chars: "\x1b[1;5P"                       }
  - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                       }
  - { key: F3,       mods: Control, chars: "\x1b[1;5R"                       }
  - { key: F4,       mods: Control, chars: "\x1b[1;5S"                       }
  - { key: F5,       mods: Control, chars: "\x1b[15;5~"                      }
  - { key: F6,       mods: Control, chars: "\x1b[17;5~"                      }
  - { key: F7,       mods: Control, chars: "\x1b[18;5~"                      }
  - { key: F8,       mods: Control, chars: "\x1b[19;5~"                      }
  - { key: F9,       mods: Control, chars: "\x1b[20;5~"                      }
  - { key: F10,      mods: Control, chars: "\x1b[21;5~"                      }
  - { key: F11,      mods: Control, chars: "\x1b[23;5~"                      }
  - { key: F12,      mods: Control, chars: "\x1b[24;5~"                      }
  - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                       }
  - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                       }
  - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                       }
  - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                       }
  - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                      }
  - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                      }
  - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                      }
  - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                      }
  - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                      }
  - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                      }
  - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                      }
  - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                      }
  - { key: F1,       mods: Super,   chars: "\x1b[1;3P"                       }
  - { key: F2,       mods: Super,   chars: "\x1b[1;3Q"                       }
  - { key: F3,       mods: Super,   chars: "\x1b[1;3R"                       }
  - { key: F4,       mods: Super,   chars: "\x1b[1;3S"                       }
  - { key: F5,       mods: Super,   chars: "\x1b[15;3~"                      }
  - { key: F6,       mods: Super,   chars: "\x1b[17;3~"                      }
  - { key: F7,       mods: Super,   chars: "\x1b[18;3~"                      }
  - { key: F8,       mods: Super,   chars: "\x1b[19;3~"                      }
  - { key: F9,       mods: Super,   chars: "\x1b[20;3~"                      }
  - { key: F10,      mods: Super,   chars: "\x1b[21;3~"                      }
  - { key: F11,      mods: Super,   chars: "\x1b[23;3~"                      }
  - { key: F12,      mods: Super,   chars: "\x1b[24;3~"                      }
  - { key: NumpadEnter,             chars: "\n"                              }
  - { key: N,        mods: Command, action: CreateNewWindow                  }
